on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      file:
        required: false
        type: string
        default: "Dockerfile"
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN:
        required: true

jobs:
  build:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    env:
      TASK_INCLUDE_DIR: "/home/runner/work/infra.tasks"
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }} 
    steps:

      - name: Install Task
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

      - name: Install 1Password CLI
        run: |
          wget "https://cache.agilebits.com/dist/1P/op2/pkg/${ONEPASSWORD_VERSION}/op_linux_amd64_${ONEPASSWORD_VERSION}.zip" -O op.zip && \
          unzip -d op op.zip && \
          sudo mv op/op /usr/local/bin && \
          rm -r op.zip op && \
          sudo groupadd -f onepassword-cli && \
          sudo chgrp onepassword-cli /usr/local/bin/op && \
          sudo chmod g+s /usr/local/bin/op
        env:
          ONEPASSWORD_VERSION: v2.24.0

      - name: Check 1Password credentials
        run: op user get --me

      - name: Obtain repo access token
        id: ctrl_hub_bot_repo_access_token 
        run: echo CTRL_HUB_BOT_REPO_ACCESS_TOKEN=$(op read op://ctrl-hub.run/CTRL_HUB_BOT_REPO_ACCESS_TOKEN/password) >> "$GITHUB_OUTPUT"

      - name: Obtain Google Artifact Registry credentials
        id: ctrl_hub_google_artifact_registry_credentials
        run: echo GCP_REGISTRY_SERVICE_ACCOUNT=$(op read op://ctrl-hub.run/GCP_REGISTRY_SERVICE_ACCOUNT/password) >> "$GITHUB_OUTPUT"

      - name: Checkout shared tasks repo
        uses: actions/checkout@v4
        with:
          repository: ctrl-hub/infra.tasks
          path: "infra.tasks"
          token: ${{ steps.ctrl_hub_bot_repo_access_token.outputs.CTRL_HUB_BOT_REPO_ACCESS_TOKEN }}

      - name: Move tasks repo to include path
        run: mv "${GITHUB_WORKSPACE}/infra.tasks" "${TASK_INCLUDE_DIR}"

      - name: Extract tag as an ENV var
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the registry
        uses: docker/login-action@v3
        with:
          registry: europe-west2-docker.pkg.dev
          username: _json_key
          password: ${{ steps.ctrl_hub_google_artifact_registry_credentials.outputs.GCP_REGISTRY_SERVICE_ACCOUNT }}

      - name: Checkout source repo
        uses: actions/checkout@v4

      - name: Build and Push image
        uses: docker/build-push-action@v5
        with:
          tags: |
            europe-west2-docker.pkg.dev/ctrl-hub-registry/registry/${{ inputs.image }}:${{ env.RELEASE_VERSION }}
            europe-west2-docker.pkg.dev/ctrl-hub-registry/registry/${{ inputs.image }}:latest
          file: ${{ inputs.file }}
          push: true
          build-args: |
            COMPOSER_SECRET_ID=composer
          secrets: |
            "composer={ 
              ""github-oauth"": { 
                ""github.com"": ""${{ steps.ctrl_hub_bot_repo_access_token.outputs.CTRL_HUB_BOT_REPO_ACCESS_TOKEN }}""
              }
            }"